/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package gui;

import classe.Aluno;
import classe.Disciplina;
import gerenciador.gerenciadorAluno;
import gerenciador.gerenciadorDisciplina;
import gui.tablemodels.TMCadDisciplina;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author  igorxf
 */
public class JDialogDisciplina extends javax.swing.JDialog {
    
    private boolean editando;
    private String nomeEscolhido;
    private Disciplina discEditando;
    private gerenciadorDisciplina gerenciaDisc;
    private gerenciadorAluno gerenciaAluno;

     public JDialogDisciplina(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        this.editando= false;
        this.nomeEscolhido = "";
        this.discEditando = new Disciplina();
        this.gerenciaDisc = new gerenciadorDisciplina();
        this.gerenciaAluno = new gerenciadorAluno();
        gerenciaAluno.carregarDoArquivo("ListagemAlunos.csv");
        gerenciaDisc.carregarDoArquivo("ListagemDisciplina.csv");

        this.habilitarCampos(false);
        this.limparCampos();

        this.atualizarTabela();
    }
    public void habilitarCampos(boolean flag) {
        
        txtNome.setEnabled(flag);
        txtSemestre.setEnabled(flag);
        txtHorario.setEnabled(flag);
        txtProfMin.setEnabled(flag);
    }

    public void limparCampos() {
        txtNome.setText("");
        txtSemestre.setText("");
        txtHorario.setText("");
        txtProfMin.setText("");
    }

    public void objetoParaCampos(Disciplina p) {
      
       txtNome.setText(p.getNome());
       txtSemestre.setText(p.getSemestre()+ "");
       txtHorario.setText(p.getHorario());
       txtProfMin.setText(p.getProfM()+"");

    }
    public Disciplina camposParaObjeto() {
        Disciplina p = new Disciplina();
        p.setNome(txtNome.getText());
        p.setSemestre( txtSemestre.getText());
        p.setHorario(txtHorario.getText());
        p.setProfM(txtProfMin.getText());
        
        return p;
    }


    /**
     * Creates new form JDialogDisciplina
     */
   
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        JPanelDisciplina = new javax.swing.JPanel();
        jlbDisciplina = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnNovo = new javax.swing.JButton();
        btnEdt = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnMatricular = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblSemestre = new javax.swing.JLabel();
        txtSemestre = new javax.swing.JTextField();
        lblHorario = new javax.swing.JLabel();
        txtHorario = new javax.swing.JTextField();
        lblProfMin = new javax.swing.JLabel();
        txtProfMin = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        grdDisciplina = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        JPanelDisciplina.setBackground(new java.awt.Color(153, 153, 153));

        jlbDisciplina.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jlbDisciplina.setText("Disciplina ");
        JPanelDisciplina.add(jlbDisciplina);

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        btnNovo.setBackground(new java.awt.Color(204, 204, 204));
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        jPanel2.add(btnNovo);

        btnEdt.setBackground(new java.awt.Color(204, 204, 204));
        btnEdt.setText("Editar");
        btnEdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdtActionPerformed(evt);
            }
        });
        jPanel2.add(btnEdt);

        btnCancelar.setBackground(new java.awt.Color(204, 204, 204));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel2.add(btnCancelar);

        btnSalvar.setBackground(new java.awt.Color(204, 204, 204));
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jPanel2.add(btnSalvar);

        btnExcluir.setBackground(new java.awt.Color(204, 204, 204));
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jPanel2.add(btnExcluir);

        btnMatricular.setText("Matricular");
        btnMatricular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMatricularActionPerformed(evt);
            }
        });
        jPanel2.add(btnMatricular);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        lblNome.setText("Nome");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        lblSemestre.setText("Semestre");

        lblHorario.setText("Horario");

        txtHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHorarioActionPerformed(evt);
            }
        });

        lblProfMin.setText("Prof. Ministrante");

        txtProfMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProfMinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblHorario)
                    .addComponent(lblNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(txtHorario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblProfMin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProfMin, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblSemestre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(91, 91, 91))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSemestre, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNome)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHorario)
                    .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProfMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProfMin))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        grdDisciplina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(grdDisciplina);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JPanelDisciplina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JPanelDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {                                            
       this.limparCampos();
       this.habilitarCampos(false);
       this.editando = false;
    }                                           

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        Disciplina novoDisc = this.camposParaObjeto();

        if (this.editando == true) {
            this.gerenciaDisc.atualizarDisciplina(nomeEscolhido, novoDisc);
        } else { //Estou inserindo
            this.gerenciaDisc.addDisciplina(novoDisc);
        }

        this.limparCampos();
        this.habilitarCampos(false);

        this.atualizarTabela();
    }                                         

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void txtHorarioActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void txtProfMinActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {                                        
      this.limparCampos();
      this.habilitarCampos(true);
      this.editando = false;
    }                                       

    private void btnEdtActionPerformed(java.awt.event.ActionEvent evt) {                                       
        String nomeEscolhido = JOptionPane.showInputDialog("Informe o nome que deseja EDITAR:", "");

        this.discEditando = this.gerenciaDisc.buscarDisciplina(nomeEscolhido);

        if (discEditando == null) {
            JOptionPane.showMessageDialog(this, "Não existe este nome.");
        } else {
            this.limparCampos();
            this.habilitarCampos(true);
            this.objetoParaCampos(discEditando);
            this.editando = true;
            this.nomeEscolhido = discEditando.getNome();
        }

    }                                      

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {                                           
         String nomeEscolhido = JOptionPane.showInputDialog("Informe o nome que deseja excluir:", "");

        Disciplina p = this.gerenciaDisc.buscarDisciplina(nomeEscolhido);

        if (p == null) {
            JOptionPane.showMessageDialog(this, "Não existe este nome.");
        } else {
            this.gerenciaDisc.removeDisciplina(nomeEscolhido);
            JOptionPane.showMessageDialog(this, "Exclusão feita com sucesso!");
        }

        this.atualizarTabela();

    }                                          

    private void btnMatricularActionPerformed(java.awt.event.ActionEvent evt) {                                              
        String CPFAluno = JOptionPane.showInputDialog(this, "Informe o CPF do aluno.","");
        String nomeDisciplina = JOptionPane.showInputDialog(this, "Informe em qual disciplina");
        List<Disciplina> disciplinas = gerenciaDisc.getDisciplinas();
        List<Aluno> alunos = gerenciaAluno.getAlunos();
        
        
        if(CPFAluno == null || nomeDisciplina == null){
            JOptionPane.showMessageDialog(this,"Aluno ou disciplina nao cadastrado");
        }else{
            Aluno adicionado = new Aluno();
            for(Aluno a : alunos){
                if(a.getCpf().equals(CPFAluno)){
                    adicionado = a;
                }
            }
            for(Disciplina d : disciplinas){
                if(d.getNome().equals(nomeDisciplina)){
                    d.getAlunos().add(adicionado);
                    gerenciaDisc.salvarNoArquivo("ListagemDisciplina.csv");
                }
            }
        }
        atualizarTabela();
        
    }                                             
    
    private void grdAlunoMouseClicked(java.awt.event.MouseEvent evt) {                                       
       Disciplina a = this.getObjetoSelecionadoNaGrid();
       this.objetoParaCampos(a);
    }
    
    public Disciplina getObjetoSelecionadoNaGrid() {
        int linhaSelecionada = grdDisciplina.getSelectedRow();

        if (linhaSelecionada >= 0) {
            TMCadDisciplina tmCadAluno = (TMCadDisciplina) grdDisciplina.getModel();

             Disciplina d = tmCadAluno.getObjetoAluno(linhaSelecionada);
            return d;
        }
        
        return null;
    }
    
    public void atualizarTabela() {
        //cria o objeto Abstract table Model
        TMCadDisciplina tmcadaluno = new TMCadDisciplina(gerenciaDisc.getDisciplinas());

        //ligar ele no modelo da sua JTable
        grdDisciplina.setModel(tmcadaluno);
        gerenciaDisc.salvarNoArquivo("ListagemDisciplina.csv");
    }
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify                     
    private javax.swing.JPanel JPanelDisciplina;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEdt;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnMatricular;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JTable grdDisciplina;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlbDisciplina;
    private javax.swing.JLabel lblHorario;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblProfMin;
    private javax.swing.JLabel lblSemestre;
    private javax.swing.JTextField txtHorario;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtProfMin;
    private javax.swing.JTextField txtSemestre;
    // End of variables declaration                   
}
